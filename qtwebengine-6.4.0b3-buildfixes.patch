diff -up qtwebengine-everywhere-src-6.4.0-beta3/src/3rdparty/chromium/build/config/clang/BUILD.gn.omv~ qtwebengine-everywhere-src-6.4.0-beta3/src/3rdparty/chromium/build/config/clang/BUILD.gn
--- qtwebengine-everywhere-src-6.4.0-beta3/src/3rdparty/chromium/build/config/clang/BUILD.gn.omv~	2022-08-25 03:08:48.203870466 +0200
+++ qtwebengine-everywhere-src-6.4.0-beta3/src/3rdparty/chromium/build/config/clang/BUILD.gn	2022-08-25 03:55:22.978880074 +0200
@@ -46,6 +46,11 @@ config("extra_warnings") {
     "-Wstring-conversion",
 
     "-Wtautological-overlap-compare",
+
+    # FIXME this doesn't belong here, but fixes the reference to gio/gio.h in
+    # src/3rdparty/chromium/third_party/webrtc/modules/desktop_capture/linux/wayland/xdg_session_details.h
+    "-I/usr/include/glib-2.0",
+    "-I/usr/lib64/glib-2.0/include",
   ]
 }
 
diff -up qtwebengine-everywhere-src-6.4.0-beta3/src/3rdparty/chromium/third_party/zlib/google/zip_internal.cc.omv~ qtwebengine-everywhere-src-6.4.0-beta3/src/3rdparty/chromium/third_party/zlib/google/zip_internal.cc
--- qtwebengine-everywhere-src-6.4.0-beta3/src/3rdparty/chromium/third_party/zlib/google/zip_internal.cc.omv~	2022-08-25 00:28:12.958335863 +0200
+++ qtwebengine-everywhere-src-6.4.0-beta3/src/3rdparty/chromium/third_party/zlib/google/zip_internal.cc	2022-08-25 00:31:35.772634005 +0200
@@ -177,7 +177,7 @@ void* OpenZipBuffer(void* opaque, const
 
 // Reads compressed data from the specified stream. This function copies data
 // refered by the opaque parameter and returns the size actually copied.
-uLong ReadZipBuffer(void* opaque, void* /*stream*/, void* buf, uLong size) {
+unsigned long ReadZipBuffer(void* opaque, void* /*stream*/, void* buf, unsigned long size) {
   ZipBuffer* buffer = static_cast<ZipBuffer*>(opaque);
   DCHECK_LE(buffer->offset, buffer->length);
   ZPOS64_T remaining_bytes = buffer->length - buffer->offset;
@@ -192,10 +192,10 @@ uLong ReadZipBuffer(void* opaque, void*
 
 // Writes compressed data to the stream. This function always returns zero
 // because this implementation is only for reading compressed data.
-uLong WriteZipBuffer(void* /*opaque*/,
+unsigned long WriteZipBuffer(void* /*opaque*/,
                      void* /*stream*/,
                      const void* /*buf*/,
-                     uLong /*size*/) {
+                     unsigned long /*size*/) {
   NOTREACHED();
   return 0;
 }
@@ -357,7 +357,7 @@ bool ZipOpenNewFileInZip(zipFile zip_fil
                          Compression compression) {
   // Section 4.4.4 http://www.pkware.com/documents/casestudies/APPNOTE.TXT
   // Setting the Language encoding flag so the file is told to be in utf-8.
-  const uLong LANGUAGE_ENCODING_FLAG = 0x1 << 11;
+  const unsigned long LANGUAGE_ENCODING_FLAG = 0x1 << 11;
 
   const zip_fileinfo file_info = TimeToZipFileInfo(last_modified_time);
   const int err = zipOpenNewFileInZip4_64(
@@ -370,11 +370,11 @@ bool ZipOpenNewFileInZip(zipFile zip_fil
       /*size_extrafield_global=*/0u,
       /*comment=*/nullptr,
       /*method=*/compression,
-      /*level=*/Z_DEFAULT_COMPRESSION,
+      /*level=*/-1 /*Z_DEFAULT_COMPRESSION*/,
       /*raw=*/0,
       /*windowBits=*/-MAX_WBITS,
       /*memLevel=*/DEF_MEM_LEVEL,
-      /*strategy=*/Z_DEFAULT_STRATEGY,
+      /*strategy=*/0 /*Z_DEFAULT_STRATEGY*/,
       /*password=*/nullptr,
       /*crcForCrypting=*/0,
       /*versionMadeBy=*/0,
