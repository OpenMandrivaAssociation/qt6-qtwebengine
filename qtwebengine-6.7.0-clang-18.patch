diff -up qtwebengine-everywhere-src-6.7.0/src/3rdparty/chromium/third_party/webrtc/pc/legacy_stats_collector.cc.omv~ qtwebengine-everywhere-src-6.7.0/src/3rdparty/chromium/third_party/webrtc/pc/legacy_stats_collector.cc
--- qtwebengine-everywhere-src-6.7.0/src/3rdparty/chromium/third_party/webrtc/pc/legacy_stats_collector.cc.omv~	2024-04-06 21:02:57.970123806 +0200
+++ qtwebengine-everywhere-src-6.7.0/src/3rdparty/chromium/third_party/webrtc/pc/legacy_stats_collector.cc	2024-04-06 21:09:35.157892210 +0200
@@ -188,9 +188,9 @@ void ExtractStats(const cricket::VoiceRe
       {StatsReport::kStatsValueNameAccelerateRate, info.accelerate_rate},
       {StatsReport::kStatsValueNamePreemptiveExpandRate,
        info.preemptive_expand_rate},
-      {StatsReport::kStatsValueNameTotalAudioEnergy, info.total_output_energy},
+      {StatsReport::kStatsValueNameTotalAudioEnergy, static_cast<float>(info.total_output_energy)},
       {StatsReport::kStatsValueNameTotalSamplesDuration,
-       info.total_output_duration}};
+       static_cast<float>(info.total_output_duration)}};
 
   const IntForAdd ints[] = {
       {StatsReport::kStatsValueNameCurrentDelayMs, info.delay_estimate_ms},
@@ -244,9 +244,9 @@ void ExtractStats(const cricket::VoiceSe
   SetAudioProcessingStats(report, info.apm_statistics);
 
   const FloatForAdd floats[] = {
-      {StatsReport::kStatsValueNameTotalAudioEnergy, info.total_input_energy},
+      {StatsReport::kStatsValueNameTotalAudioEnergy, static_cast<float>(info.total_input_energy)},
       {StatsReport::kStatsValueNameTotalSamplesDuration,
-       info.total_input_duration}};
+       static_cast<float>(info.total_input_duration)}};
 
   RTC_DCHECK_GE(info.audio_level, 0);
   const IntForAdd ints[] = {
@@ -340,7 +340,7 @@ void ExtractStats(const cricket::VideoRe
       {StatsReport::kStatsValueNamePlisSent, info.plis_sent},
       {StatsReport::kStatsValueNameRenderDelayMs, info.render_delay_ms},
       {StatsReport::kStatsValueNameTargetDelayMs, info.target_delay_ms},
-      {StatsReport::kStatsValueNameFramesDecoded, info.frames_decoded},
+      {StatsReport::kStatsValueNameFramesDecoded, static_cast<int>(info.frames_decoded)},
   };
 
   for (const auto& i : ints)
@@ -378,21 +378,21 @@ void ExtractStats(const cricket::VideoSe
     report->AddInt(StatsReport::kStatsValueNameQpSum, *info.qp_sum);
 
   const IntForAdd ints[] = {
-      {StatsReport::kStatsValueNameAdaptationChanges, info.adapt_changes},
-      {StatsReport::kStatsValueNameAvgEncodeMs, info.avg_encode_ms},
+      {StatsReport::kStatsValueNameAdaptationChanges, static_cast<int>(info.adapt_changes)},
+      {StatsReport::kStatsValueNameAvgEncodeMs, static_cast<int>(info.avg_encode_ms)},
       {StatsReport::kStatsValueNameEncodeUsagePercent,
-       info.encode_usage_percent},
-      {StatsReport::kStatsValueNameFirsReceived, info.firs_received},
-      {StatsReport::kStatsValueNameFrameHeightSent, info.send_frame_height},
-      {StatsReport::kStatsValueNameFrameRateInput, round(info.framerate_input)},
-      {StatsReport::kStatsValueNameFrameRateSent, info.framerate_sent},
-      {StatsReport::kStatsValueNameFrameWidthSent, info.send_frame_width},
-      {StatsReport::kStatsValueNameNacksReceived, info.nacks_received},
-      {StatsReport::kStatsValueNamePacketsLost, info.packets_lost},
-      {StatsReport::kStatsValueNamePacketsSent, info.packets_sent},
-      {StatsReport::kStatsValueNamePlisReceived, info.plis_received},
-      {StatsReport::kStatsValueNameFramesEncoded, info.frames_encoded},
-      {StatsReport::kStatsValueNameHugeFramesSent, info.huge_frames_sent},
+       static_cast<int>(info.encode_usage_percent)},
+      {StatsReport::kStatsValueNameFirsReceived, static_cast<int>(info.firs_received)},
+      {StatsReport::kStatsValueNameFrameHeightSent, static_cast<int>(info.send_frame_height)},
+      {StatsReport::kStatsValueNameFrameRateInput, static_cast<int>(round(info.framerate_input))},
+      {StatsReport::kStatsValueNameFrameRateSent, static_cast<int>(info.framerate_sent)},
+      {StatsReport::kStatsValueNameFrameWidthSent, static_cast<int>(info.send_frame_width)},
+      {StatsReport::kStatsValueNameNacksReceived, static_cast<int>(info.nacks_received)},
+      {StatsReport::kStatsValueNamePacketsLost, static_cast<int>(info.packets_lost)},
+      {StatsReport::kStatsValueNamePacketsSent, static_cast<int>(info.packets_sent)},
+      {StatsReport::kStatsValueNamePlisReceived, static_cast<int>(info.plis_received)},
+      {StatsReport::kStatsValueNameFramesEncoded, static_cast<int>(info.frames_encoded)},
+      {StatsReport::kStatsValueNameHugeFramesSent, static_cast<int>(info.huge_frames_sent)},
   };
 
   for (const auto& i : ints)
@@ -780,19 +780,19 @@ StatsReport* LegacyStatsCollector::AddCo
                 AddCandidateReport(remote_candidate_stats, false)->id());
 
   const Int64ForAdd int64s[] = {
-      {StatsReport::kStatsValueNameBytesReceived, info.recv_total_bytes},
-      {StatsReport::kStatsValueNameBytesSent, info.sent_total_bytes},
-      {StatsReport::kStatsValueNamePacketsSent, info.sent_total_packets},
-      {StatsReport::kStatsValueNameRtt, info.rtt},
+      {StatsReport::kStatsValueNameBytesReceived, static_cast<long>(info.recv_total_bytes)},
+      {StatsReport::kStatsValueNameBytesSent, static_cast<long>(info.sent_total_bytes)},
+      {StatsReport::kStatsValueNamePacketsSent, static_cast<long>(info.sent_total_packets)},
+      {StatsReport::kStatsValueNameRtt, static_cast<long>(info.rtt)},
       {StatsReport::kStatsValueNameSendPacketsDiscarded,
-       info.sent_discarded_packets},
+       static_cast<long>(info.sent_discarded_packets)},
       {StatsReport::kStatsValueNameSentPingRequestsTotal,
-       info.sent_ping_requests_total},
+       static_cast<long>(info.sent_ping_requests_total)},
       {StatsReport::kStatsValueNameSentPingRequestsBeforeFirstResponse,
-       info.sent_ping_requests_before_first_response},
-      {StatsReport::kStatsValueNameSentPingResponses, info.sent_ping_responses},
-      {StatsReport::kStatsValueNameRecvPingRequests, info.recv_ping_requests},
-      {StatsReport::kStatsValueNameRecvPingResponses, info.recv_ping_responses},
+       static_cast<long>(info.sent_ping_requests_before_first_response)},
+      {StatsReport::kStatsValueNameSentPingResponses, static_cast<long>(info.sent_ping_responses)},
+      {StatsReport::kStatsValueNameRecvPingRequests, static_cast<long>(info.recv_ping_requests)},
+      {StatsReport::kStatsValueNameRecvPingResponses, static_cast<long>(info.recv_ping_responses)},
   };
   for (const auto& i : int64s)
     report->AddInt64(i.name, i.value);
