diff -up qtwebengine-everywhere-src-6.7.0-beta1/src/3rdparty/chromium/third_party/blink/renderer/core/xml/xsl_style_sheet_libxslt.cc.omv~ qtwebengine-everywhere-src-6.7.0-beta1/src/3rdparty/chromium/third_party/blink/renderer/core/xml/xsl_style_sheet_libxslt.cc
diff -up qtwebengine-everywhere-src-6.7.0-beta1/src/3rdparty/chromium/third_party/blink/renderer/core/xml/xslt_processor.cc.omv~ qtwebengine-everywhere-src-6.7.0-beta1/src/3rdparty/chromium/third_party/blink/renderer/core/xml/xslt_processor.cc
diff -up qtwebengine-everywhere-src-6.7.0-beta1/src/3rdparty/chromium/third_party/blink/renderer/core/xml/xslt_processor.h.omv~ qtwebengine-everywhere-src-6.7.0-beta1/src/3rdparty/chromium/third_party/blink/renderer/core/xml/xslt_processor.h
--- qtwebengine-everywhere-src-6.7.0-beta1/src/3rdparty/chromium/third_party/blink/renderer/core/xml/xslt_processor.h.omv~	2023-12-21 03:40:12.717884115 +0100
+++ qtwebengine-everywhere-src-6.7.0-beta1/src/3rdparty/chromium/third_party/blink/renderer/core/xml/xslt_processor.h	2023-12-21 03:40:23.433147538 +0100
@@ -77,7 +77,7 @@ class XSLTProcessor final : public Scrip
 
   void reset();
 
-  static void ParseErrorFunc(void* user_data, xmlError*);
+  static void ParseErrorFunc(void* user_data, const xmlError*);
   static void GenericErrorFunc(void* user_data, const char* msg, ...);
 
   // Only for libXSLT callbacks
diff -up qtwebengine-everywhere-src-6.7.0-beta1/src/3rdparty/chromium/third_party/blink/renderer/core/xml/xslt_processor_libxslt.cc.omv~ qtwebengine-everywhere-src-6.7.0-beta1/src/3rdparty/chromium/third_party/blink/renderer/core/xml/xslt_processor_libxslt.cc
--- qtwebengine-everywhere-src-6.7.0-beta1/src/3rdparty/chromium/third_party/blink/renderer/core/xml/xslt_processor_libxslt.cc.omv~	2023-12-21 03:40:36.469467961 +0100
+++ qtwebengine-everywhere-src-6.7.0-beta1/src/3rdparty/chromium/third_party/blink/renderer/core/xml/xslt_processor_libxslt.cc	2023-12-21 03:40:43.077630359 +0100
@@ -66,7 +66,7 @@ void XSLTProcessor::GenericErrorFunc(voi
   // It would be nice to do something with this error message.
 }
 
-void XSLTProcessor::ParseErrorFunc(void* user_data, xmlError* error) {
+void XSLTProcessor::ParseErrorFunc(void* user_data, const xmlError* error) {
   FrameConsole* console = static_cast<FrameConsole*>(user_data);
   if (!console)
     return;
