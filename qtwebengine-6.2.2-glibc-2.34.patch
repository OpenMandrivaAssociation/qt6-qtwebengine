diff -up qtwebengine-everywhere-src-6.2.2/src/3rdparty/chromium/sandbox/linux/services/credentials.cc.omv~ qtwebengine-everywhere-src-6.2.2/src/3rdparty/chromium/sandbox/linux/services/credentials.cc
--- qtwebengine-everywhere-src-6.2.2/src/3rdparty/chromium/sandbox/linux/services/credentials.cc.omv~	2022-01-08 04:56:51.307334122 +0100
+++ qtwebengine-everywhere-src-6.2.2/src/3rdparty/chromium/sandbox/linux/services/credentials.cc	2022-01-08 04:57:57.306517732 +0100
@@ -98,7 +98,8 @@ bool ChrootToSafeEmptyDir() {
   // attempt this optimization.
   clone_flags |= CLONE_VM | CLONE_VFORK | CLONE_SETTLS;
 
-  char tls_buf[PTHREAD_STACK_MIN] = {0};
+  char *tls_buf = new char[PTHREAD_STACK_MIN];
+  *tls_buf = 0;
   tls = tls_buf;
 #endif
 
@@ -109,6 +110,7 @@ bool ChrootToSafeEmptyDir() {
   int status = -1;
   PCHECK(HANDLE_EINTR(waitpid(pid, &status, 0)) == pid);
 
+  delete[] tls_buf;
   return WIFEXITED(status) && WEXITSTATUS(status) == kExitSuccess;
 }
 
diff -up qtwebengine-everywhere-src-6.2.2/src/3rdparty/chromium/third_party/zlib/google/zip_internal.cc.omv~ qtwebengine-everywhere-src-6.2.2/src/3rdparty/chromium/third_party/zlib/google/zip_internal.cc
--- qtwebengine-everywhere-src-6.2.2/src/3rdparty/chromium/third_party/zlib/google/zip_internal.cc.omv~	2022-01-08 05:02:38.021305146 +0100
+++ qtwebengine-everywhere-src-6.2.2/src/3rdparty/chromium/third_party/zlib/google/zip_internal.cc	2022-01-08 05:03:36.211503399 +0100
@@ -172,13 +172,13 @@ void* OpenZipBuffer(void* opaque, const
 
 // Reads compressed data from the specified stream. This function copies data
 // refered by the opaque parameter and returns the size actually copied.
-uLong ReadZipBuffer(void* opaque, void* /*stream*/, void* buf, uLong size) {
+unsigned long ReadZipBuffer(void* opaque, void* /*stream*/, void* buf, unsigned long size) {
   ZipBuffer* buffer = static_cast<ZipBuffer*>(opaque);
   DCHECK_LE(buffer->offset, buffer->length);
   size_t remaining_bytes = buffer->length - buffer->offset;
   if (!buffer || !buffer->data || !remaining_bytes)
     return 0;
-  size = std::min(size, static_cast<uLong>(remaining_bytes));
+  size = std::min(size, static_cast<unsigned long>(remaining_bytes));
   memcpy(buf, &buffer->data[buffer->offset], size);
   buffer->offset += size;
   return size;
@@ -186,10 +186,10 @@ uLong ReadZipBuffer(void* opaque, void*
 
 // Writes compressed data to the stream. This function always returns zero
 // because this implementation is only for reading compressed data.
-uLong WriteZipBuffer(void* /*opaque*/,
+unsigned long WriteZipBuffer(void* /*opaque*/,
                      void* /*stream*/,
                      const void* /*buf*/,
-                     uLong /*size*/) {
+                     unsigned long /*size*/) {
   NOTREACHED();
   return 0;
 }
@@ -203,7 +203,7 @@ long GetOffsetOfZipBuffer(void* opaque,
 }
 
 // Moves the current offset to the specified position.
-long SeekZipBuffer(void* opaque, void* /*stream*/, uLong offset, int origin) {
+long SeekZipBuffer(void* opaque, void* /*stream*/, unsigned long offset, int origin) {
   ZipBuffer* buffer = static_cast<ZipBuffer*>(opaque);
   if (!buffer)
     return -1;
@@ -350,7 +350,7 @@ bool ZipOpenNewFileInZip(zipFile zip_fil
                          base::Time last_modified_time) {
   // Section 4.4.4 http://www.pkware.com/documents/casestudies/APPNOTE.TXT
   // Setting the Language encoding flag so the file is told to be in utf-8.
-  const uLong LANGUAGE_ENCODING_FLAG = 0x1 << 11;
+  const unsigned long LANGUAGE_ENCODING_FLAG = 0x1 << 11;
 
   zip_fileinfo file_info = TimeToZipFileInfo(last_modified_time);
   if (ZIP_OK != zipOpenNewFileInZip4(zip_file,          // file
@@ -362,11 +362,11 @@ bool ZipOpenNewFileInZip(zipFile zip_fil
                                      0u,          // size_extrafield_global
                                      NULL,        // comment
                                      Z_DEFLATED,  // method
-                                     Z_DEFAULT_COMPRESSION,  // level
+                                     -1 /*Z_DEFAULT_COMPRESSION*/,  // level
                                      0,                      // raw
                                      -MAX_WBITS,             // windowBits
                                      DEF_MEM_LEVEL,          // memLevel
-                                     Z_DEFAULT_STRATEGY,     // strategy
+                                     0 /*Z_DEFAULT_STRATEGY*/,     // strategy
                                      NULL,                   // password
                                      0,                      // crcForCrypting
                                      0,                      // versionMadeBy
